{"version":3,"sources":["../index.js"],"names":["uncachedValue","getProxyData","createImmutable","dataOrCache","immutableMethods","mutableMethods","isObjectData","undefined","proxy","getPlainObjectAccessor","propName","value","arguments","length","Object","assign","getCustomObjectAccessor","args","result","Error","Proxy","get","target","immutable","mutable","cache","module","exports","model","subscribers","dispatchQueue","isDispatching","getState","mapper","$$get","fromCache","loader","type","subscribe","subscriber","push","unsubcribed","lazyDispatch","queue","splice","item","innerDispatch","action","notify","state","unsubscribedIndexes","i","pop","actionResult","hasChange","dispatch","prevValue","nextValue","proxyData","propChanged","cached","prev","next","setTimeout"],"mappings":"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","file":"index.js","sourcesContent":["const uncachedValue = {};\r\nconst getProxyData = \"@@ProxyData\";\r\n\r\nfunction createImmutable(dataOrCache, immutableMethods, mutableMethods) {\r\n  const isObjectData = dataOrCache !== undefined;\r\n  let proxy;\r\n  if (!isObjectData) {\r\n    dataOrCache = {};\r\n  }\r\n\r\n  function getPlainObjectAccessor(propName) {\r\n    return function(value) {\r\n      if (!arguments.length) return dataOrCache[propName];\r\n      if (dataOrCache[propName] !== value) {\r\n        return createImmutable(\r\n          Object.assign({}, dataOrCache, { [propName]: value })\r\n        );\r\n      }\r\n      return proxy;\r\n    };\r\n  }\r\n\r\n  function getCustomObjectAccessor(propName) {\r\n    return function(...args) {\r\n      let result;\r\n      if (propName in immutableMethods) {\r\n        result = immutableMethods[propName](...args);\r\n        if (typeof result === \"function\") {\r\n          result = result(dataOrCache);\r\n        }\r\n        return result;\r\n      }\r\n\r\n      if (propName in mutableMethods) {\r\n        result = mutableMethods[propName](dataOrCache, ...args);\r\n        if (typeof result === \"function\") {\r\n          result(dataOrCache);\r\n        }\r\n        return createImmutable(dataOrCache, immutableMethods, mutableMethods);\r\n      }\r\n      throw new Error(\"No method named \" + propName);\r\n    };\r\n  }\r\n\r\n  return (proxy = new Proxy(dataOrCache, {\r\n    get(target, propName) {\r\n      if (isObjectData) {\r\n        if (propName === getProxyData) return dataOrCache;\r\n        return getPlainObjectAccessor(propName);\r\n      }\r\n\r\n      if (propName === getProxyData) {\r\n        return {\r\n          immutable: immutableMethods,\r\n          mutable: mutableMethods,\r\n          cache: dataOrCache\r\n        };\r\n      }\r\n\r\n      return getCustomObjectAccessor(propName);\r\n    }\r\n  }));\r\n}\r\n\r\nmodule.exports = function(model) {\r\n  const subscribers = [];\r\n  const dispatchQueue = [];\r\n  let isDispatching;\r\n\r\n  function getState(mapper) {\r\n    const cache = {};\r\n\r\n    function $$get(propName, fromCache) {\r\n      if (propName in cache) return cache[propName];\r\n\r\n      if (fromCache) {\r\n        return uncachedValue;\r\n      }\r\n\r\n      const loader = model[propName];\r\n\r\n      if (typeof loader !== \"function\") {\r\n        return loader;\r\n      }\r\n\r\n      return (cache[propName] = loader({\r\n        type: \"get\"\r\n      }));\r\n    }\r\n\r\n    const proxy = new Proxy(model, {\r\n      get(target, propName) {\r\n        if (propName === \"$$get\") return $$get;\r\n        return $$get(propName, false);\r\n      }\r\n    });\r\n\r\n    if (mapper) return mapper(proxy);\r\n\r\n    return proxy;\r\n  }\r\n\r\n  function subscribe(subscriber) {\r\n    subscribers.push(subscriber);\r\n    return function() {\r\n      subscriber.unsubcribed = true;\r\n    };\r\n  }\r\n\r\n  async function lazyDispatch() {\r\n    const queue = dispatchQueue.splice();\r\n    for (let item of queue) {\r\n      await innerDispatch(item.action, item.args);\r\n    }\r\n  }\r\n\r\n  function notify(state) {\r\n    const unsubscribedIndexes = [];\r\n\r\n    for (let i = 0; i < subscribers.length; i++) {\r\n      const subscriber = subscribers[i];\r\n      if (subscriber.unsubcribed) {\r\n        unsubscribedIndexes.push(i);\r\n        continue;\r\n      }\r\n      subscriber(state);\r\n    }\r\n    while (unsubscribedIndexes.length) {\r\n      subscribers.splice(unsubscribedIndexes.pop(), 1);\r\n    }\r\n  }\r\n\r\n  async function innerDispatch(action, args) {\r\n    isDispatching = true;\r\n    try {\r\n      let state;\r\n      let actionResult = await action(...args);\r\n      let hasChange = false;\r\n\r\n      if (typeof actionResult === \"function\") {\r\n        actionResult = await actionResult((state = getState()), dispatch);\r\n      }\r\n\r\n      if (actionResult) {\r\n        if (!state) {\r\n          state = getState();\r\n        }\r\n\r\n        for (let propName in actionResult) {\r\n          const prevValue = state.$$get(propName, true);\r\n          let nextValue = actionResult[propName];\r\n\r\n          if (nextValue) {\r\n            const proxyData = nextValue[getProxyData];\r\n            if (proxyData) {\r\n              nextValue = proxyData;\r\n            }\r\n          }\r\n\r\n          if (\r\n            prevValue !== nextValue &&\r\n            typeof model[propName] === \"function\"\r\n          ) {\r\n            if (prevValue !== uncachedValue && prevValue === nextValue) {\r\n              // nothing change\r\n            } else {\r\n              let propChanged = await model[propName]({\r\n                type: \"set\",\r\n                cached: prevValue !== uncachedValue,\r\n                get: () => state.$$get(propName),\r\n                prev: prevValue === uncachedValue ? undefined : prevValue,\r\n                next: nextValue\r\n              });\r\n\r\n              if (propChanged !== false) {\r\n                hasChange = true;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      if (hasChange) {\r\n        notify(state);\r\n      }\r\n    } finally {\r\n      isDispatching = false;\r\n    }\r\n\r\n    if (dispatchQueue.length) {\r\n      setTimeout(lazyDispatch);\r\n    }\r\n  }\r\n\r\n  function dispatch(action, ...args) {\r\n    if (isDispatching) {\r\n      dispatchQueue.push({ action, args });\r\n      return;\r\n    }\r\n    return innerDispatch(action, args);\r\n  }\r\n\r\n  return {\r\n    getState,\r\n    subscribe,\r\n    dispatch\r\n  };\r\n};\r\n\r\nmodule.exports.createImmutable = createImmutable;\r\n"]}